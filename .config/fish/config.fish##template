
# Setting custom environment vars
set -x PLATFORM (uname -s)
set -x GPG_TTY (tty)
set -x STARSHIP_CONFIG "$HOME/.config/starship.toml"
set fish_greeting
set -x TERM "xterm-256color"

{% if yadm.distro == "Arch" %}

# Start X at login
if status is-login
    if test -z "$DISPLAY" -a "$XDG_VTNR" = 1
        exec startx >> .xsession-errors 2>&1
    end
end

{% endif %}

{% if yadm.os == "Darwin" %}

fish_add_path /opt/homebrew/sbin
fish_add_path $HOME/.local/bin
fish_add_path $HOME/.cargo/bin

# Fix the annoying terminal database message
set -x PATH "/usr/local/bin:/opt/homebrew/bin:$PATH"	

# pnpm
set -gx PNPM_HOME "$HOME/Library/pnpm"
set -gx PATH "$PNPM_HOME" $PATH

if status is-interactive
  test -e {$HOME}/.iterm2_shell_integration.fish ; and source {$HOME}/.iterm2_shell_integration.fish
end

{% endif %}

if status is-interactive
    # Commands to run in interactive sessions can go here
    pfetch
    keychain --quiet --agents ssh

    if test -z (pgrep ssh-agent)
        eval (ssh-agent -c) > /dev/null
        set -Ux SSH_AUTH_SOCK $SSH_AUTH_SOCK
        set -Ux SSH_AGENT_PID $SSH_AGENT_PID
        set -Ux SSH_AUTH_SOCK $SSH_AUTH_SOCK
    end

    # macOS Building Vars
    if test -z (secret_env.sh)
      eval (secret_env.sh) > /dev/null 
      set -Ux CSC_KEY_PASSWORD $CSC_KEY_PASSWORD
      set -Ux CSC_LINK $CSC_LINK
      set -Ux APPLEID $APPLEID
      set -Ux APPLEIDPASS $APPLEIDPASS
    end

	  . ~/.config/fish/functions/rprompt.fish
    . ~/.private-dots/scripts/secret_env.sh

    alias ls='exa -F --group-directories-first'
	alias vim='nvim'
	alias vi='nvim'
	alias la='ls -la'
    
    op completion fish | source
end

starship init fish | source
